<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration
        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">
<generatorConfiguration>
    <!-- 数据库属性文件配置 -->
    <properties resource="database.properties"/>

    <!--
        defaultModelType属性的值会影响实体类(或叫domain类,model类)的生成
        conditional - 这是默认值
            如果一个实体类只包含一个字段,则不会单独生成此实体类。
            因此,如果一个表的主键只有一个字段,那么不会为该字段生成单独的实体类,会将该字段合并到基本实体类中。
        flat
            该模型为每一张表只生成一个实体类。这个实体类包含表中的所有字段。一般使用这个模型就够了。
        hierarchical
            如果表有主键,那么该模型会产生一个单独的主键实体类,如果表还有BLOB字段，则会为表生成一个包含所有BLOB字段的单独的实体类,
            然后为所有其他的字段生成一个单独的实体类。MBG会在所有生成的实体类之间维护一个继承关系。显然这个模型比较复杂。
    -->
    <context id="mysql"
             targetRuntime="tk.mybatis.mapper.generator.TkMyBatis3SimpleImpl"
             defaultModelType="flat">
        <!--分隔符设置-->
        <property name="beginningDelimiter" value="`"/>
        <property name="endingDelimiter" value="`"/>
        <!--序列化插件-->
        <plugin type="org.mybatis.generator.plugins.SerializablePlugin" />
        <plugin type="tk.mybatis.mapper.generator.MapperPlugin">
            <!--设置生成的Mapper继承自哪个接口-->
            <property name="mappers" value="tk.mybatis.mapper.common.Mapper"/>
        </plugin>

        <!--配置数据库的连接-->
        <jdbcConnection driverClass="${jdbc.driver}"
                        connectionURL="${jdbc.url}"
                        userId="${jdbc.username}"
                        password="${jdbc.password}">
            <!--不生成其他数据库的表-->
            <property name="nullCatalogMeansCurrent" value="true"/>
        </jdbcConnection>
        <!-- 具体的属性我们配置在 pom.xml 的 <properties> 标签内 -->
        <!--配置实体类生成的位置-->
        <javaModelGenerator targetPackage="${targetModelPackage}" targetProject="${targetJavaProject}"/>
        <!--配置sql映射文件的位置-->
        <sqlMapGenerator targetPackage="${targetXMLPackage}" targetProject="${targetResourcesProject}"/>
        <!--配置Mapper接口的位置-->
        <javaClientGenerator targetPackage="${targetMapperPackage}" targetProject="${targetJavaProject}" type="XMLMAPPER"/>

        <table tableName="%" mapperName="{0}Mapper" delimitIdentifiers="true"  delimitAllColumns="true">
            <generatedKey column="id" sqlStatement="mysql" identity="false"/>
            <!-- 此处标记类名替换规则，注意不是表名前缀是类名前缀 -->
<!--            <columnRenamingRule searchString="^is_" replaceString="" />-->
        </table>
    </context>
</generatorConfiguration>